# -*- coding: utf-8 -*-
"""model_prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bzRUmBX-Is0JidxAbI16U5SKdvcrN-N4
"""

# We will use the forecasted values for load and green energy and calculate surplus and save the output in json file F1.

import pandas as pd
import numpy as np

# Generate date range
start_date = '2022-10-20 00:00:00'
end_date = pd.to_datetime(start_date) + pd.DateOffset(hours=1752)
date_range = pd.date_range(start=start_date, end=end_date, freq='H')
# Provide the path to your Excel file (change 'path/to/your/file.xlsx' to the actual path)

# Read the Excel file into a DataFrame
forecast_df_1 = forecast_df
forecast_df_gen_1 = forecast_df_gen
forecast_df_1["StartTime"] = date_range
forecast_df_gen_1["StartTime"] = date_range

forecast_data_1 = pd.merge(forecast_df_1, forecast_df_gen_1, on='StartTime', how='inner')



forecast_data_1.rename(columns={
                               "SP_gen":"green_energy_SP", "UK_gen":"green_energy_UK", "DE_gen":"green_energy_DE", "DK_gen":"green_energy_DK",
                               "HU_gen": "green_energy_HU", "SE_gen": "green_energy_SE", "IT_gen": "green_energy_IT", "PO_GEN": "green_energy_PO", "NE_gen": "green_energy_NL",
                               "SP": "SP_Load", "UK": "UK_Load", "DE":"DE_Load", "DK":"DK_Load", "HU":"HU_Load", "SE":"SE_Load", "IT": "IT_Load", "PO":"PO_Load", "NE" : "NL_Load"
                               }, inplace=True)

forecast_data =forecast_data_1


# #store the surpless values
forecast_data["SP"] = forecast_data["green_energy_SP"] - forecast_data["SP_Load"]
forecast_data["UK"] = forecast_data["green_energy_UK"] - forecast_data["UK_Load"]
forecast_data["DE"] = forecast_data["green_energy_DE"] - forecast_data["DE_Load"]
forecast_data["DK"] = forecast_data["green_energy_DK"] - forecast_data["DK_Load"]
forecast_data["HU"] = forecast_data["green_energy_HU"] - forecast_data["HU_Load"]
forecast_data["SE"] = forecast_data["green_energy_SE"] - forecast_data["SE_Load"]
forecast_data["IT"] = forecast_data["green_energy_IT"] - forecast_data["IT_Load"]
forecast_data["PO"] = forecast_data["green_energy_PO"] - forecast_data["PO_Load"]
forecast_data["NL"] = forecast_data["green_energy_NL"] - forecast_data["NL_Load"]

country_codes = {
'SP' : 0, # Spain
'UK' : 1, # United Kingdom
'DE' : 2, # Germany
'DK' : 3, # Denmark
'HU' : 5, # Hungary
'SE' : 4, # Sweden
'IT' : 6, # Italy
'PO' : 7, # Poland
'NL' : 8 # Netherlands
                 }
#save the forecasted values with renamed columns into csv


#Now save according to which country has the maximum surplous every hour as per the forecasting in the file predicted.json

list(country_codes)
Keysc = list(country_codes)


Forecast_data_pt1 = forecast_data[Keysc]
Forecast_data_pt1['max_surplus_country_code'] = Forecast_data_pt1.idxmax(axis=1)

Forecast_data_pt1['max_surplus_country_code'] = Forecast_data_pt1['max_surplus_country_code'].map(country_codes)
Forecast_data_pt1['target'] = Forecast_data_pt1.reset_index().index
Forecast_data_pt1 = Forecast_data_pt1[['target', 'max_surplus_country_code']]

import json
import pandas as pd
result_dict = dict(zip(Forecast_data_pt1['target'], Forecast_data_pt1['max_surplus_country_code']))
F1 = {"target":result_dict }
file_path = '/content/output1.json'

# Save the dictionary to a JSON file
with open(file_path, 'w') as json_file:
    json.dump(F1, json_file, indent=2)